/*
  * Copyright (c) 2021, Capable Robot Components Inc. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful, but WITHOUT
  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  * more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */

#include <dt-bindings/media/camera.h>
#include <dt-bindings/gpio/tegra194-gpio.h>

#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
#define CAM0_RST_L TEGRA194_MAIN_GPIO(H, 3)
#define CAM1_RST_L TEGRA194_MAIN_GPIO(T, 6)

/ {
    host1x {
        vi@15c10000  {
            num-channels = <2>;
            nvidia,num-vi-channels = <2>;
            ports {
                #address-cells = <1>;
                #size-cells = <0>;
                port@0 {
                    reg = <0>;
                    imx477_vi_in0: endpoint {
                        status = "okay";
                        port-index = <0>;
                        bus-width = <2>;
                        remote-endpoint = <&imx477_csi_out0>;
                    };
                };
                port@1 {
                    reg = <1>;
                    imx477_vi_in1: endpoint {
                        status = "okay";
                        port-index = <3>;
                        bus-width = <2>;
                        remote-endpoint = <&imx477_csi_out1>;
                    };
                };
            };
        };

        nvcsi@15a00000 {
            num-channels = <2>;
            #address-cells = <1>;
            #size-cells = <0>;
            channel@0 {
                reg = <0>;
                ports {
                    #address-cells = <1>;
                    #size-cells = <0>;
                    port@0 {
                        reg = <0>;
                        status = "okay";
                        imx477_csi_in0: endpoint@0 {
                            status = "okay";
                            port-index = <0>;
                            bus-width = <2>;
                            remote-endpoint = <&imx477_dual_out0>;
                        };
                    };
                    port@1 {
                        reg = <1>;
                        status = "okay";
                        imx477_csi_out0: endpoint@1 {
                            status = "okay";
                            remote-endpoint = <&imx477_vi_in0>;
                        };
                    };
                };
            };
            channel@1 {
                reg = <1>;
                ports {
                    #address-cells = <1>;
                    #size-cells = <0>;
                    port@2 {
                        reg = <0>;
                        status = "okay";
                        imx477_csi_in1: endpoint@2 {
                            status = "okay";
                            port-index = <3>;
                            bus-width = <2>;
                            remote-endpoint = <&imx477_out1>;
                        };
                    };
                    port@3 {
                        reg = <1>;
                        status = "okay";
                        imx477_csi_out1: endpoint@3 {
                            status = "okay";
                            remote-endpoint = <&imx477_vi_in1>;
                        };
                    };
                };
            };
        };
    };

    gpio@2200000 {
        camera-i2cmux-enable {
            status = "okay";
            gpio-hog;
            output-high;
            gpios = <CAM1_RST_L 0>;
            label = "camera-i2cmux-enable";
        };
    };

    i2c@3180000 {
        status =  "okay";

        pca9548: pca9548@70 {
            status = "okay";
            compatible = "nxp,pca9548";
            reg = <0x70>;
            #address-cells = <1>;
            #size-cells = <0>;
            force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
            vcc-supply = <&p2822_avdd_cam_2v8>;
            vcc-pullup-supply = <&p2822_avdd_cam_2v8>;
            reset-gpios = <&tegra_main_gpio CAM1_RST_L GPIO_ACTIVE_LOW>;

            i2c@0 {
                status = "okay";
                reg = <0>;
                i2c-mux,deselect-on-exit;
                #address-cells = <1>;
                #size-cells = <0>;

                imx477_cam0: imx477_a@1a {
                    compatible = "ridgerun,imx477";
                    status = "okay";

                    // reset-gpios = <&tegra_main_gpio CAM0_RST_L GPIO_ACTIVE_LOW>;

                    /* I2C device address */
                    reg = <0x1a>;

                    /* V4L2 device node location */
                    devnode = "video0";

                    /* Physical dimensions of sensor */
                    physical_w = "3.680";
                    physical_h = "2.760";

                    sensor_model = "imx477";

                    use_sensor_mode_id = "true";

                    mode0 { /* IMX477_MODE_3840x2160 */
                        mclk_khz = "24000";
                        num_lanes = "2";
                        tegra_sinterface = "serial_a";
                        phy_mode = "DPHY";
                        discontinuous_clk = "no";
                        dpcm_enable = "false";
                        cil_settletime = "0";

                        active_w = "3840";
                        active_h = "2160";
                        mode_type = "bayer";
                        pixel_phase = "rggb";
                        csi_pixel_bit_depth = "10";
                        readout_orientation = "90";
                        line_length = "11200";
                        inherent_gain = "1";
                        mclk_multiplier = "80";
                        pix_clk_hz = "840000000";

                        gain_factor = "16";
                        framerate_factor = "1000000";
                        exposure_factor = "1000000";
                        min_gain_val = "16"; /* 1.00x */
                        max_gain_val = "356"; /* 22x */
                        step_gain_val = "1";
                        default_gain = "16"; /* 1.00x */
                        min_hdr_ratio = "1";
                        max_hdr_ratio = "1";
                        min_framerate = "2000000"; /* 2.0 fps */
                        max_framerate = "30000000"; /* 30.0 fps */
                        step_framerate = "1";
                        default_framerate = "30000000"; /* 30.0 fps */
                        min_exp_time = "13"; /* us */
                        max_exp_time = "683709"; /* us */
                        step_exp_time = "1";
                        default_exp_time = "2495"; /* us */

                        embedded_metadata_height = "2";
                    };
                    mode1 { /* IMX477_MODE_1920X1080 */
                        mclk_khz = "24000";
                        num_lanes = "2";
                        tegra_sinterface = "serial_a";
                        phy_mode = "DPHY";
                        discontinuous_clk = "no";
                        dpcm_enable = "false";
                        cil_settletime = "0";

                        active_w = "1920";
                        active_h = "1080";
                        mode_type = "bayer";
                        pixel_phase = "rggb";
                        csi_pixel_bit_depth = "10";
                        readout_orientation = "90";
                        line_length = "7000";
                        inherent_gain = "1";
                        mclk_multiplier = "80";
                        pix_clk_hz = "840000000";

                        gain_factor = "16";
                        framerate_factor = "1000000";
                        exposure_factor = "1000000";
                        min_gain_val = "16"; /* 1.00x */
                        max_gain_val = "356"; /* 22x */
                        step_gain_val = "1";
                        default_gain = "16"; /* 1.00x */
                        min_hdr_ratio = "1";
                        max_hdr_ratio = "1";
                        min_framerate = "2000000"; /* 2.0 fps */
                        max_framerate = "60000000"; /* 60.0 fps */
                        step_framerate = "1";
                        default_framerate = "60000000"; /* 60.0 fps */
                        min_exp_time = "13"; /* us */
                        max_exp_time = "683709"; /* us */
                        step_exp_time = "1";
                        default_exp_time = "2495"; /* us */

                        embedded_metadata_height = "2";
                    };

                    ports {
                        #address-cells = <1>;
                        #size-cells = <0>;

                        port@0 {
                            reg = <0>;
                            imx477_dual_out0: endpoint {
                                status = "okay";
                                port-index = <0>;
                                bus-width = <2>;
                                remote-endpoint = <&imx477_csi_in0>;
                            };
                        };
                    };
                };
            };

            i2c@3 {
                status = "okay";
                reg = <3>;
                i2c-mux,deselect-on-exit;
                #address-cells = <1>;
                #size-cells = <0>;

                imx477_cam1: imx477_c@1a {
                    compatible = "ridgerun,imx477";
                    status = "okay";

                    // reset-gpios = <&tegra_main_gpio CAM0_RST_L GPIO_ACTIVE_LOW>;

                    /* I2C device address */
                    reg = <0x1a>;

                    /* V4L2 device node location */
                    devnode = "video1";

                    /* Physical dimensions of sensor */
                    physical_w = "3.680";
                    physical_h = "2.760";

                    sensor_model = "imx477";

                    use_sensor_mode_id = "true";

                    mode0 { /* IMX477_MODE_3840x2160 */
                        mclk_khz = "24000";
                        num_lanes = "2";
                        tegra_sinterface = "serial_d";
                        phy_mode = "DPHY";
                        discontinuous_clk = "no";
                        dpcm_enable = "false";
                        cil_settletime = "0";

                        active_w = "3840";
                        active_h = "2160";
                        mode_type = "bayer";
                        pixel_phase = "rggb";
                        csi_pixel_bit_depth = "10";
                        readout_orientation = "90";
                        line_length = "11200";
                        inherent_gain = "1";
                        mclk_multiplier = "80";
                        pix_clk_hz = "840000000";

                        gain_factor = "16";
                        framerate_factor = "1000000";
                        exposure_factor = "1000000";
                        min_gain_val = "16"; /* 1.00x */
                        max_gain_val = "356"; /* 22x */
                        step_gain_val = "1";
                        default_gain = "16"; /* 1.00x */
                        min_hdr_ratio = "1";
                        max_hdr_ratio = "1";
                        min_framerate = "2000000"; /* 2.0 fps */
                        max_framerate = "30000000"; /* 30.0 fps */
                        step_framerate = "1";
                        default_framerate = "30000000"; /* 30.0 fps */
                        min_exp_time = "13"; /* us */
                        max_exp_time = "683709"; /* us */
                        step_exp_time = "1";
                        default_exp_time = "2495"; /* us */

                        embedded_metadata_height = "2";
                    };
                    mode1 { /* IMX477_MODE_1920X1080 */
                        mclk_khz = "24000";
                        num_lanes = "2";
                        tegra_sinterface = "serial_d";
                        phy_mode = "DPHY";
                        discontinuous_clk = "no";
                        dpcm_enable = "false";
                        cil_settletime = "0";

                        active_w = "1920";
                        active_h = "1080";
                        mode_type = "bayer";
                        pixel_phase = "rggb";
                        csi_pixel_bit_depth = "10";
                        readout_orientation = "90";
                        line_length = "7000";
                        inherent_gain = "1";
                        mclk_multiplier = "80";
                        pix_clk_hz = "840000000";

                        gain_factor = "16";
                        framerate_factor = "1000000";
                        exposure_factor = "1000000";
                        min_gain_val = "16"; /* 1.00x */
                        max_gain_val = "356"; /* 22x */
                        step_gain_val = "1";
                        default_gain = "16"; /* 1.00x */
                        min_hdr_ratio = "1";
                        max_hdr_ratio = "1";
                        min_framerate = "2000000"; /* 2.0 fps */
                        max_framerate = "60000000"; /* 60.0 fps */
                        step_framerate = "1";
                        default_framerate = "60000000"; /* 60.0 fps */
                        min_exp_time = "13"; /* us */
                        max_exp_time = "683709"; /* us */
                        step_exp_time = "1";
                        default_exp_time = "2495"; /* us */

                        embedded_metadata_height = "2";
                    };

                    ports {
                        #address-cells = <1>;
                        #size-cells = <0>;

                        port@0 {
                            reg = <0>;
                            imx477_out1: endpoint {
                                status = "okay";
                                port-index = <3>;
                                bus-width = <2>;
                                remote-endpoint = <&imx477_csi_in1>;
                            };
                        };
                    };
                };
            };
        };
    };
};

/ {
    tegra-camera-platform {
        compatible = "nvidia, tegra-camera-platform";

        /**
        * Physical settings to calculate max ISO BW
        *
        * num_csi_lanes = <>;
        * Total number of CSI lanes when all cameras are active
        *
        * max_lane_speed = <>;
        * Max lane speed in Kbit/s
        *
        * min_bits_per_pixel = <>;
        * Min bits per pixel
        *
        * vi_peak_byte_per_pixel = <>;
        * Max byte per pixel for the VI ISO case
        *
        * vi_bw_margin_pct = <>;
        * Vi bandwidth margin in percentage
        *
        * max_pixel_rate = <>;
        * Max pixel rate in Kpixel/s for the ISP ISO case
        *
        * isp_peak_byte_per_pixel = <>;
        * Max byte per pixel for the ISP ISO case
        *
        * isp_bw_margin_pct = <>;
        * Isp bandwidth margin in percentage
        */
        num_csi_lanes = <4>;
        max_lane_speed = <1500000>;
        min_bits_per_pixel = <10>;
        vi_peak_byte_per_pixel = <2>;
        vi_bw_margin_pct = <25>;
        max_pixel_rate = <7500000>;
        isp_peak_byte_per_pixel = <5>;
        isp_bw_margin_pct = <25>;
        tpg_max_iso = <3916800>;

        /**
         * The general guideline for naming badge_info contains 3 parts, and is as follows,
         * The first part is the camera_board_id for the module; if the module is in a FFD
         * platform, then use the platform name for this part.
         * The second part contains the position of the module, ex. "rear" or "front".
         * The third part contains the last 6 characters of a part number which is found
         * in the module's specsheet from the vendor.
         */
        modules {
            module0 {
                badge = "imx477_front_adimx477";
                position = "front";
                orientation = "1";
                status = "okay";
                drivernode0 {
                    status = "okay";
                    pcl_id = "v4l2_sensor";
                    devname = "imx477 30-001a";
                    proc-device-tree = "/proc/device-tree/i2c@3180000/pca9548@70/i2c@0/imx477_a@1a";
                };
            };
            module1 {
                badge = "imx477_rear_adimx477";
                position = "rear";
                orientation = "1";
                status = "okay";
                drivernode0 {
                    status = "okay";
                    pcl_id = "v4l2_sensor";
                    devname = "imx477 33-001a";
                    proc-device-tree = "/proc/device-tree/i2c@3180000/pca9548@70/i2c@3/imx477_c@1a";
                };
            };
        };
    };
 };